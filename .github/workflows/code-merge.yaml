name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ vars.IMAGE_NAME}}
      PROJECT_ID: ${{ vars.PROJECT_ID}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Run Shellcheck with Exit on Secret Find
      run: |
        shellcheck --exit 0 .  # Exit with code 0 (success) if no secrets found
      if: steps.shellcheck.exit_code != 0 

    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}' 

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

      - name: Bump Version
        uses: reecetech/version-increment@v2024.4.3
        id: bump_version
        with:
          scheme: semver   # Semantic Versioning (vMAJOR.MINOR.PATCH)
          increment: minor 

    # - name: Automatic Tagging of Releases
    #   id: increment-git-tag
    #   run: |
    #     bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker ${{ vars.CONTAINER_REGISTRY }}

    - name: Build and Tag Docker Image
      env:
        GIT_TAG: ${{ steps.bump_version.outputs.new_version }}
      run: |
        docker tag $IMAGE_NAME:latest ${{ vars.CONTAINER_REGISTRY }}/${{ vars.PROJECT_ID}}/${{ vars.IMAGE_NAME}}/web-app:latest
        docker tag $IMAGE_NAME:latest ${{ vars.CONTAINER_REGISTRY }}/${{ vars.PROJECT_ID}}/${{ vars.IMAGE_NAME}}/web-app:$GIT_TAG

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      env:
        GIT_TAG: ${{  steps.bump_version.outputs.new_version}}
      with:
        image-ref: ${{ vars.CONTAINER_REGISTRY }}/${{ vars.PROJECT_ID}}/${{ vars.IMAGE_NAME}}/web-app:latest
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    # - name: Checkov GitHub Action
    #   uses: bridgecrewio/checkov-action@v12
    #   with:
    #     # This will add both a CLI output to the console and create a results.sarif file
    #     output_format: cli,sarif
    #     output_file_path: console,results.sarif
        
    # - name: Upload SARIF file
    #   uses: github/codeql-action/upload-sarif@v2
    #   if: success() || failure()
    #   with:
    #     sarif_file: results.sarif

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{  steps.bump_version.outputs.new_version }}
      run: |-
        docker push ${{ vars.CONTAINER_REGISTRY }}/${{ vars.PROJECT_ID}}/${{ vars.IMAGE_NAME}}/web-app:latest
        docker push ${{ vars.CONTAINER_REGISTRY }}/${{ vars.PROJECT_ID}}/${{ vars.IMAGE_NAME}}/web-app:$GIT_TAG